function varargout=sym_neuron(action,varargin)
%% Automatically generated with matlabFunction
% 
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'ntau'
   varargout{1}=3;
   return
  case 'npar'
   varargout{1}=7;
   return
  case 'nf'
   varargout{1}=2;
   return
  case 'nx'
   varargout{1}=2;
   return
  case 'tp_del'
   varargout{1}=0;
   return
  case 'maxorder'
   varargout{1}=5;
   return
  case 'iscollected'
   varargout{1}=0;
   return
  case 'directional_derivative'
   varargout{1}=1;
   return
  case 'sys_tau_seq'
   varargout{1}={};
   return
  case 'sys_tau_in'
   varargout{1}=[];
   return
  case 'xpattern'
   varargout{1}=[1  1  2  1  1  2  2  3  1  4  2  4];
   return
end
ind=varargin{1};
order=varargin{2};
nout=varargin{3};
f=str2func(sprintf('sym_neuron_%s_%d_%d',action,ind,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{4:end});
end



function [out_1,out_2] = sym_neuron_rhs_1_0(in1,in2,in3,in4)
%SYM_NEURON_RHS_1_0
%    [OUT_1,OUT_2] = SYM_NEURON_RHS_1_0(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    21-Jul-2024 14:06:51

in_1_n1 = in1(:,1);
in_1_n2 = in1(:,2);
in_1_n3 = in1(:,3);
in_1_n6 = in1(:,6);
in_1_n7 = in1(:,7);
in_1_n8 = in1(:,8);
in_2_n1 = in2(:,1);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_2_n4 = in2(:,4);
out_1 = -in_1_n1.*in_2_n1+in_2_n2.*tanh(in_1_n7)+in_2_n3.*tanh(in_1_n6);
if nargout > 1
    out_2 = -in_1_n2.*in_2_n1+in_2_n4.*tanh(in_1_n3)+in_2_n2.*tanh(in_1_n8);
end
end


function [out_1,out_2] = sym_neuron_rhs_1_1(in1,in2,in3,in4)
%SYM_NEURON_RHS_1_1
%    [OUT_1,OUT_2] = SYM_NEURON_RHS_1_1(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    21-Jul-2024 14:06:51

in_1_n1 = in1(:,1);
in_1_n2 = in1(:,2);
in_1_n3 = in1(:,3);
in_1_n6 = in1(:,6);
in_1_n7 = in1(:,7);
in_1_n8 = in1(:,8);
in_2_n1 = in2(:,1);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_2_n4 = in2(:,4);
in_3_n1 = in3(:,1);
in_3_n2 = in3(:,2);
in_3_n3 = in3(:,3);
in_3_n6 = in3(:,6);
in_3_n7 = in3(:,7);
in_3_n8 = in3(:,8);
in_4_n1 = in4(:,1);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
in_4_n4 = in4(:,4);
t2 = tanh(in_1_n3);
t3 = tanh(in_1_n6);
t4 = tanh(in_1_n7);
out_1 = -in_1_n1.*in_4_n1-in_2_n1.*in_3_n1+in_4_n2.*t4+in_4_n3.*t3-in_2_n3.*in_3_n6.*(t3.^2-1.0)-in_2_n2.*in_3_n7.*(t4.^2-1.0);
if nargout > 1
    t5 = tanh(in_1_n8);
    out_2 = -in_1_n2.*in_4_n1-in_2_n1.*in_3_n2+in_4_n4.*t2+in_4_n2.*t5-in_2_n4.*in_3_n3.*(t2.^2-1.0)-in_2_n2.*in_3_n8.*(t5.^2-1.0);
end
end


function [out_1,out_2] = sym_neuron_rhs_1_2(in1,in2,in3,in4)
%SYM_NEURON_RHS_1_2
%    [OUT_1,OUT_2] = SYM_NEURON_RHS_1_2(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    21-Jul-2024 14:06:51

in_1_n3 = in1(:,3);
in_1_n6 = in1(:,6);
in_1_n7 = in1(:,7);
in_1_n8 = in1(:,8);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_2_n4 = in2(:,4);
in_3_n1 = in3(:,1);
in_3_n2 = in3(:,2);
in_3_n3 = in3(:,3);
in_3_n6 = in3(:,6);
in_3_n7 = in3(:,7);
in_3_n8 = in3(:,8);
in_4_n1 = in4(:,1);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
in_4_n4 = in4(:,4);
t2 = tanh(in_1_n3);
t3 = tanh(in_1_n6);
t4 = tanh(in_1_n7);
t5 = tanh(in_1_n8);
t6 = t2.^2;
t7 = t3.^2;
t8 = t4.^2;
t9 = t5.^2;
t10 = t6-1.0;
t11 = t7-1.0;
t12 = t8-1.0;
out_1 = in_3_n1.*in_4_n1.*-2.0-in_3_n6.*in_4_n3.*t11.*2.0-in_3_n7.*in_4_n2.*t12.*2.0+in_2_n3.*in_3_n6.^2.*t3.*t11.*2.0+in_2_n2.*in_3_n7.^2.*t4.*t12.*2.0;
if nargout > 1
    t13 = t9-1.0;
    out_2 = in_3_n2.*in_4_n1.*-2.0-in_3_n3.*in_4_n4.*t10.*2.0-in_3_n8.*in_4_n2.*t13.*2.0+in_2_n4.*in_3_n3.^2.*t2.*t10.*2.0+in_2_n2.*in_3_n8.^2.*t5.*t13.*2.0;
end
end


function [out_1,out_2] = sym_neuron_rhs_1_3(in1,in2,in3,in4)
%SYM_NEURON_RHS_1_3
%    [OUT_1,OUT_2] = SYM_NEURON_RHS_1_3(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    21-Jul-2024 14:06:51

in_1_n3 = in1(:,3);
in_1_n6 = in1(:,6);
in_1_n7 = in1(:,7);
in_1_n8 = in1(:,8);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_2_n4 = in2(:,4);
in_3_n3 = in3(:,3);
in_3_n6 = in3(:,6);
in_3_n7 = in3(:,7);
in_3_n8 = in3(:,8);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
in_4_n4 = in4(:,4);
t2 = tanh(in_1_n3);
t3 = tanh(in_1_n6);
t4 = tanh(in_1_n7);
t5 = tanh(in_1_n8);
t6 = in_3_n3.^3;
t7 = in_3_n6.^3;
t8 = in_3_n7.^3;
t9 = in_3_n8.^3;
t10 = t2.^2;
t11 = t3.^2;
t12 = t4.^2;
t13 = t5.^2;
t14 = t10-1.0;
t15 = t11-1.0;
t16 = t12-1.0;
out_1 = in_2_n3.*t7.*t15.^2.*-2.0-in_2_n2.*t8.*t16.^2.*2.0-in_2_n3.*t7.*t11.*t15.*4.0-in_2_n2.*t8.*t12.*t16.*4.0+in_3_n6.^2.*in_4_n3.*t3.*t15.*6.0+in_3_n7.^2.*in_4_n2.*t4.*t16.*6.0;
if nargout > 1
    t17 = t13-1.0;
    out_2 = in_2_n4.*t6.*t14.^2.*-2.0-in_2_n2.*t9.*t17.^2.*2.0-in_2_n4.*t6.*t10.*t14.*4.0-in_2_n2.*t9.*t13.*t17.*4.0+in_3_n3.^2.*in_4_n4.*t2.*t14.*6.0+in_3_n8.^2.*in_4_n2.*t5.*t17.*6.0;
end
end


function [out_1,out_2] = sym_neuron_rhs_1_4(in1,in2,in3,in4)
%SYM_NEURON_RHS_1_4
%    [OUT_1,OUT_2] = SYM_NEURON_RHS_1_4(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    21-Jul-2024 14:06:52

in_1_n3 = in1(:,3);
in_1_n6 = in1(:,6);
in_1_n7 = in1(:,7);
in_1_n8 = in1(:,8);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_2_n4 = in2(:,4);
in_3_n3 = in3(:,3);
in_3_n6 = in3(:,6);
in_3_n7 = in3(:,7);
in_3_n8 = in3(:,8);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
in_4_n4 = in4(:,4);
t2 = tanh(in_1_n3);
t3 = tanh(in_1_n6);
t4 = tanh(in_1_n7);
t5 = tanh(in_1_n8);
t6 = in_3_n3.^3;
t7 = in_3_n3.^4;
t8 = in_3_n6.^3;
t9 = in_3_n6.^4;
t10 = in_3_n7.^3;
t11 = in_3_n7.^4;
t12 = in_3_n8.^3;
t13 = in_3_n8.^4;
t14 = t2.^2;
t15 = t3.^2;
t16 = t4.^2;
t17 = t5.^2;
t18 = t14-1.0;
t19 = t15-1.0;
t20 = t16-1.0;
t21 = t17-1.0;
t22 = t18.^2;
t23 = t19.^2;
t24 = t20.^2;
out_1 = in_4_n3.*t8.*t23.*-8.0-in_4_n2.*t10.*t24.*8.0+in_2_n3.*t3.*t9.*t23.*1.6e+1+in_2_n2.*t4.*t11.*t24.*1.6e+1-in_4_n3.*t8.*t15.*t19.*1.6e+1-in_4_n2.*t10.*t16.*t20.*1.6e+1+in_2_n3.*t3.^3.*t9.*t19.*8.0+in_2_n2.*t4.^3.*t11.*t20.*8.0;
if nargout > 1
    t25 = t21.^2;
    out_2 = in_4_n4.*t6.*t22.*-8.0-in_4_n2.*t12.*t25.*8.0+in_2_n4.*t2.*t7.*t22.*1.6e+1+in_2_n2.*t5.*t13.*t25.*1.6e+1-in_4_n4.*t6.*t14.*t18.*1.6e+1-in_4_n2.*t12.*t17.*t21.*1.6e+1+in_2_n4.*t2.^3.*t7.*t18.*8.0+in_2_n2.*t5.^3.*t13.*t21.*8.0;
end
end


function [out_1,out_2] = sym_neuron_rhs_1_5(in1,in2,in3,in4)
%SYM_NEURON_RHS_1_5
%    [OUT_1,OUT_2] = SYM_NEURON_RHS_1_5(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    21-Jul-2024 14:06:52

in_1_n3 = in1(:,3);
in_1_n6 = in1(:,6);
in_1_n7 = in1(:,7);
in_1_n8 = in1(:,8);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_2_n4 = in2(:,4);
in_3_n3 = in3(:,3);
in_3_n6 = in3(:,6);
in_3_n7 = in3(:,7);
in_3_n8 = in3(:,8);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
in_4_n4 = in4(:,4);
t2 = tanh(in_1_n3);
t3 = tanh(in_1_n6);
t4 = tanh(in_1_n7);
t5 = tanh(in_1_n8);
t6 = in_3_n3.^4;
t7 = in_3_n3.^5;
t8 = in_3_n6.^4;
t9 = in_3_n6.^5;
t10 = in_3_n7.^4;
t11 = in_3_n7.^5;
t12 = in_3_n8.^4;
t13 = in_3_n8.^5;
t14 = t2.^2;
t15 = t3.^2;
t16 = t4.^2;
t17 = t5.^2;
t18 = t14-1.0;
t19 = t15-1.0;
t20 = t16-1.0;
t21 = t17-1.0;
t22 = t18.^2;
t23 = t19.^2;
t24 = t20.^2;
out_1 = in_2_n3.*t9.*t19.^3.*-1.6e+1-in_2_n2.*t11.*t20.^3.*1.6e+1-in_2_n3.*t9.*t15.*t23.*8.8e+1-in_2_n2.*t11.*t16.*t24.*8.8e+1+in_4_n3.*t3.*t8.*t23.*8.0e+1+in_4_n2.*t4.*t10.*t24.*8.0e+1-in_2_n3.*t9.*t15.^2.*t19.*1.6e+1-in_2_n2.*t11.*t16.^2.*t20.*1.6e+1+in_4_n3.*t3.^3.*t8.*t19.*4.0e+1+in_4_n2.*t4.^3.*t10.*t20.*4.0e+1;
if nargout > 1
    t25 = t21.^2;
    out_2 = in_2_n4.*t7.*t18.^3.*-1.6e+1-in_2_n2.*t13.*t21.^3.*1.6e+1-in_2_n4.*t7.*t14.*t22.*8.8e+1+in_4_n4.*t2.*t6.*t22.*8.0e+1-in_2_n2.*t13.*t17.*t25.*8.8e+1+in_4_n2.*t5.*t12.*t25.*8.0e+1-in_2_n4.*t7.*t14.^2.*t18.*1.6e+1+in_4_n4.*t2.^3.*t6.*t18.*4.0e+1-in_2_n2.*t13.*t17.^2.*t21.*1.6e+1+in_4_n2.*t5.^3.*t12.*t21.*4.0e+1;
end
end

