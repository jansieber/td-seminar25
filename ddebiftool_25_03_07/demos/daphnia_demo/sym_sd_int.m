function varargout=sym_sd_int(action,varargin)
%% Automatically generated with matlabFunction
% 
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'ntau'
   varargout{1}=0;
   return
  case 'npar'
   varargout{1}=3;
   return
  case 'nf'
   varargout{1}=1;
   return
  case 'nx'
   varargout{1}=2;
   return
  case 'tp_del'
   varargout{1}=0;
   return
  case 'maxorder'
   varargout{1}=3;
   return
  case 'iscollected'
   varargout{1}=0;
   return
  case 'directional_derivative'
   varargout{1}=1;
   return
  case 'sys_tau_seq'
   varargout{1}={};
   return
  case 'sys_tau_in'
   varargout{1}=[];
   return
  case 'xpattern'
   varargout{1}=[1  1  2  1];
   return
end
ind=varargin{1};
order=varargin{2};
nout=varargin{3};
f=str2func(sprintf('sym_sd_int_%s_%d_%d',action,ind,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{4:end});
end



function out_1 = sym_sd_int_rhs_1_0(in1,in2,in3,in4)
%SYM_SD_INT_RHS_1_0
%    OUT_1 = SYM_SD_INT_RHS_1_0(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 24.1.
%    07-Feb-2025 00:00:37

in_1_n1 = in1(:,1);
in_1_n2 = in1(:,2);
in_2_n1 = in2(:,1);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
t2 = in_1_n2.*in_2_n3;
out_1 = (in_2_n1.*in_2_n2.*t2.*exp(-in_1_n1.*in_2_n2))./(t2+1.0);
end


function out_1 = sym_sd_int_rhs_1_1(in1,in2,in3,in4)
%SYM_SD_INT_RHS_1_1
%    OUT_1 = SYM_SD_INT_RHS_1_1(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 24.1.
%    07-Feb-2025 00:00:37

in_1_n1 = in1(:,1);
in_1_n2 = in1(:,2);
in_2_n1 = in2(:,1);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_3_n1 = in3(:,1);
in_3_n2 = in3(:,2);
in_4_n1 = in4(:,1);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
t2 = in_1_n1.*in_2_n2;
t3 = in_1_n2.*in_2_n3;
t4 = -t2;
t5 = t3+1.0;
t6 = exp(t4);
t7 = 1.0./t5;
out_1 = in_2_n1.*in_4_n2.*t3.*t6.*t7+in_2_n2.*in_4_n1.*t3.*t6.*t7-in_2_n1.*in_2_n2.*t3.*t6.*t7.*(in_1_n1.*in_4_n2+in_2_n2.*in_3_n1)-in_2_n1.*in_2_n2.*t3.*t6.*t7.^2.*(in_1_n2.*in_4_n3+in_2_n3.*in_3_n2)+in_1_n2.*in_2_n1.*in_2_n2.*in_4_n3.*t6.*t7+in_2_n1.*in_2_n2.*in_2_n3.*in_3_n2.*t6.*t7;
end


function out_1 = sym_sd_int_rhs_1_2(in1,in2,in3,in4)
%SYM_SD_INT_RHS_1_2
%    OUT_1 = SYM_SD_INT_RHS_1_2(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 24.1.
%    07-Feb-2025 00:00:37

in_1_n1 = in1(:,1);
in_1_n2 = in1(:,2);
in_2_n1 = in2(:,1);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_3_n1 = in3(:,1);
in_3_n2 = in3(:,2);
in_4_n1 = in4(:,1);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
t2 = in_1_n1.*in_2_n2;
t3 = in_1_n2.*in_2_n3;
t4 = in_1_n1.*in_4_n2;
t5 = in_2_n2.*in_3_n1;
t6 = in_1_n2.*in_4_n3;
t7 = in_2_n3.*in_3_n2;
t8 = -t2;
t9 = t3+1.0;
t11 = t4+t5;
t12 = t6+t7;
t10 = exp(t8);
t13 = 1.0./t9;
t14 = t13.^2;
out_1 = in_2_n1.*in_4_n2.*t6.*t10.*t13.*2.0+in_2_n2.*in_4_n1.*t6.*t10.*t13.*2.0+in_2_n1.*in_4_n2.*t7.*t10.*t13.*2.0+in_2_n2.*in_4_n1.*t7.*t10.*t13.*2.0+in_4_n1.*in_4_n2.*t3.*t10.*t13.*2.0-in_2_n1.*in_2_n2.*t6.*t10.*t11.*t13.*2.0-in_2_n1.*in_2_n2.*t7.*t10.*t11.*t13.*2.0-in_2_n1.*in_2_n2.*t6.*t10.*t12.*t14.*2.0-in_2_n1.*in_2_n2.*t7.*t10.*t12.*t14.*2.0-in_2_n1.*in_4_n2.*t3.*t5.*t10.*t13.*2.0-in_2_n1.*in_4_n2.*t3.*t10.*t11.*t13.*2.0-in_2_n2.*in_4_n1.*t3.*t10.*t11.*t13.*2.0-in_2_n1.*in_4_n2.*t3.*t10.*t12.*t14.*2.0-in_2_n2.*in_4_n1.*t3.*t10.*t12.*t14.*2.0+in_2_n1.*in_2_n2.*t3.*t10.*t11.^2.*t13+in_2_n1.*in_2_n2.*t3.*t10.*t12.^2.*t13.^3.*2.0+in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t10.*t13.*2.0-in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t3.*t10.*t14.*2.0+in_2_n1.*in_2_n2.*t3.*t10.*t11.*t12.*t14.*2.0;
end


function out_1 = sym_sd_int_rhs_1_3(in1,in2,in3,in4)
%SYM_SD_INT_RHS_1_3
%    OUT_1 = SYM_SD_INT_RHS_1_3(IN1,IN2,IN3,IN4)

%    This function was generated by the Symbolic Math Toolbox version 24.1.
%    07-Feb-2025 00:00:38

in_1_n1 = in1(:,1);
in_1_n2 = in1(:,2);
in_2_n1 = in2(:,1);
in_2_n2 = in2(:,2);
in_2_n3 = in2(:,3);
in_3_n1 = in3(:,1);
in_3_n2 = in3(:,2);
in_4_n1 = in4(:,1);
in_4_n2 = in4(:,2);
in_4_n3 = in4(:,3);
t2 = in_1_n1.*in_2_n2;
t3 = in_1_n2.*in_2_n3;
t4 = in_1_n1.*in_4_n2;
t5 = in_2_n2.*in_3_n1;
t6 = in_1_n2.*in_4_n3;
t7 = in_2_n3.*in_3_n2;
t8 = -t2;
t9 = t3+1.0;
t11 = t4+t5;
t12 = t6+t7;
t10 = exp(t8);
t13 = 1.0./t9;
t16 = t11.^2;
t17 = t12.^2;
t14 = t13.^2;
t15 = t13.^3;
et1 = in_4_n1.*in_4_n2.*t6.*t10.*t13.*6.0+in_4_n1.*in_4_n2.*t7.*t10.*t13.*6.0+in_2_n1.*in_2_n2.*t6.*t10.*t13.*t16.*3.0+in_2_n1.*in_2_n2.*t7.*t10.*t13.*t16.*3.0+in_2_n1.*in_2_n2.*t6.*t10.*t15.*t17.*6.0+in_2_n1.*in_2_n2.*t7.*t10.*t15.*t17.*6.0-in_2_n1.*in_4_n2.*t5.*t6.*t10.*t13.*6.0-in_2_n1.*in_4_n2.*t5.*t7.*t10.*t13.*6.0-in_2_n1.*in_4_n2.*t6.*t10.*t11.*t13.*6.0-in_2_n2.*in_4_n1.*t6.*t10.*t11.*t13.*6.0-in_2_n1.*in_4_n2.*t7.*t10.*t11.*t13.*6.0-in_2_n2.*in_4_n1.*t7.*t10.*t11.*t13.*6.0+in_2_n1.*in_4_n2.*t3.*t10.*t13.*t16.*3.0-in_2_n1.*in_4_n2.*t6.*t10.*t12.*t14.*6.0+in_2_n2.*in_4_n1.*t3.*t10.*t13.*t16.*3.0-in_2_n2.*in_4_n1.*t6.*t10.*t12.*t14.*6.0-in_2_n1.*in_4_n2.*t7.*t10.*t12.*t14.*6.0-in_2_n2.*in_4_n1.*t7.*t10.*t12.*t14.*6.0+in_2_n1.*in_4_n2.*t3.*t10.*t15.*t17.*6.0+in_2_n2.*in_4_n1.*t3.*t10.*t15.*t17.*6.0-in_4_n1.*in_4_n2.*t3.*t5.*t10.*t13.*6.0-in_4_n1.*in_4_n2.*t3.*t10.*t11.*t13.*6.0-in_4_n1.*in_4_n2.*t3.*t10.*t12.*t14.*6.0;
et2 = in_2_n1.*in_3_n1.*in_4_n2.^2.*t3.*t10.*t13.*-6.0-in_2_n1.*in_2_n2.*t3.*t10.*t11.^3.*t13-in_2_n1.*in_2_n2.*t3.*t10.*t12.^3.*t14.^2.*6.0+in_2_n1.*in_3_n2.*in_4_n2.*in_4_n3.*t10.*t13.*6.0+in_2_n2.*in_3_n2.*in_4_n1.*in_4_n3.*t10.*t13.*6.0-in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t6.*t10.*t14.*6.0-in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t7.*t10.*t14.*6.0-in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t10.*t11.*t13.*6.0-in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t10.*t12.*t14.*6.0-in_2_n1.*in_3_n2.*in_4_n2.*in_4_n3.*t3.*t10.*t14.*6.0-in_2_n2.*in_3_n2.*in_4_n1.*in_4_n3.*t3.*t10.*t14.*6.0+in_2_n1.*in_2_n2.*t6.*t10.*t11.*t12.*t14.*6.0+in_2_n1.*in_2_n2.*t7.*t10.*t11.*t12.*t14.*6.0-in_2_n1.*in_2_n2.*t3.*t10.*t12.*t14.*t16.*3.0-in_2_n1.*in_2_n2.*t3.*t10.*t11.*t15.*t17.*6.0+in_2_n1.*in_4_n2.*t3.*t5.*t10.*t11.*t13.*6.0+in_2_n1.*in_4_n2.*t3.*t5.*t10.*t12.*t14.*6.0+in_2_n1.*in_4_n2.*t3.*t10.*t11.*t12.*t14.*6.0+in_2_n2.*in_4_n1.*t3.*t10.*t11.*t12.*t14.*6.0+in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t3.*t10.*t11.*t14.*6.0;
et3 = in_2_n1.*in_2_n2.*in_3_n2.*in_4_n3.*t3.*t10.*t12.*t15.*1.2e+1;
out_1 = et1+et2+et3;
end

